<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:security="http://www.springframework.org/schema/security"
         xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">

    <!--<http auto-config="true">
        <security:intercept-url pattern="/create"
                       access="hasRole('ROLE_ADMIN')" />

        <security:intercept-url pattern="/all"
                                access="permitAll" />
        <security:intercept-url pattern="/**"
                                access="isAuthenticated()" />
    </http>-->
    <security:http auto-config="true">
        <!--cors activation-->
       <!-- <security:cors configuration-source-ref="corsSource" />-->

        <!--cors-->
        <intercept-url pattern="/users"
                       access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/all"
                                access="permitAll" />
        <security:intercept-url pattern="/**"
                                access="isAuthenticated()" />
      <!--  <security:csrf disabled="true" />-->
    </security:http>

    <!--cors activation bean-->
    <b:bean id="corsConfiguration" class="org.springframework.web.cors.CorsConfiguration">
        <b:property name="allowedOrigins">
            <b:list>
                <b:value>http://localhost:3000</b:value>
            </b:list>
        </b:property>
        <b:property name="allowedMethods">
            <b:list>
                <b:value>GET</b:value>
                <b:value>POST</b:value>
            </b:list>
        </b:property>
        <!-- Other properties if needed -->
    </b:bean>

    <b:bean id="corsSource" class="org.springframework.web.cors.UrlBasedCorsConfigurationSource">
        <b:property name="corsConfigurations">
            <b:map>
                <b:entry key="/**" value-ref="corsConfiguration" />
            </b:map>
        </b:property>
    </b:bean>
    <!--cors activation bean-->

    <!-- Fixed Username and Password
    <user-service>
        <user name="user" password="{noop}password" authorities="ROLE_USER" />
    </user-service>-->

    <b:bean id="dataSource" class="com.mysql.cj.jdbc.MysqlDataSource">
        <b:property name="databaseName" value="ngofood"/>
        <b:property name="url" value="jdbc:mysql://localhost:3306/ngofood"/>
        <b:property name="user" value="root"/>
        <b:property name="password" value="root"/>
    </b:bean>
<!--password encoder bean start-->
    <b:bean id="noOpPasswordEncoder"
          class="org.springframework.security.crypto.password.NoOpPasswordEncoder">
    </b:bean>
    <!--password encoder bean end-->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="
				select email,password, enabled
				from users where email=?"
                    authorities-by-username-query="
				SELECT u.email, r.name FROM user_has_roles ur
                INNER JOIN roles r ON r.id = ur.role_id
				INNER JOIN users u ON u.id = ur.user_id
				WHERE u.email = ?"
            />
            <security:password-encoder ref="noOpPasswordEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>

</b:beans>
